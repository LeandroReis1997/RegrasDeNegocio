// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projeto.Arquitetura.Core.Infra.Data.Context;

namespace Projeto.Arquitetura.Core.Infra.Data.Migrations
{
    [DbContext(typeof(ContextEFPedidos))]
    partial class ContextEFPedidosModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Projeto.Arquitetura.Core.Domain.Pedidos.Entidades.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Apelido")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Projeto.Arquitetura.Core.Domain.Pedidos.Entidades.Fornecedores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Apelido")
                        .IsUnique();

                    b.ToTable("Fornecedres");
                });

            modelBuilder.Entity("Projeto.Arquitetura.Core.Domain.Pedidos.Entidades.ItensPedidos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdPedido");

                    b.Property<int>("IdProduto");

                    b.Property<int>("Qtd");

                    b.HasKey("Id");

                    b.HasIndex("IdPedido");

                    b.HasIndex("IdProduto");

                    b.ToTable("ItensPedidos");
                });

            modelBuilder.Entity("Projeto.Arquitetura.Core.Domain.Pedidos.Entidades.Pedidos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataEntrega")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("DateTime");

                    b.Property<int>("IdCliente");

                    b.HasKey("Id");

                    b.HasIndex("IdCliente");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Projeto.Arquitetura.Core.Domain.Pedidos.Entidades.Produtos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<int>("IdFornecedor");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.HasIndex("IdFornecedor");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Projeto.Arquitetura.Core.Domain.Pedidos.Entidades.Clientes", b =>
                {
                    b.OwnsOne("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.CpfCnpjVO", "CPFCNPJ", b1 =>
                        {
                            b1.Property<int>("ClientesId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnName("CpfCnpj")
                                .HasColumnType("varchar(14)");

                            b1.HasKey("ClientesId");

                            b1.HasIndex("Numero")
                                .IsUnique();

                            b1.ToTable("Clientes");

                            b1.HasOne("Projeto.Arquitetura.Core.Domain.Pedidos.Entidades.Clientes")
                                .WithOne("CPFCNPJ")
                                .HasForeignKey("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.CpfCnpjVO", "ClientesId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.EmailVO", "Email", b1 =>
                        {
                            b1.Property<int>("ClientesId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Endereco")
                                .IsRequired()
                                .HasColumnName("Email")
                                .HasColumnType("varchar(100)");

                            b1.HasKey("ClientesId");

                            b1.ToTable("Clientes");

                            b1.HasOne("Projeto.Arquitetura.Core.Domain.Pedidos.Entidades.Clientes")
                                .WithOne("Email")
                                .HasForeignKey("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.EmailVO", "ClientesId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.EnderecoVO", "Endereco", b1 =>
                        {
                            b1.Property<int>("ClientesId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Bairro")
                                .HasColumnName("Bairro")
                                .HasColumnType("varchar(30)");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnName("Cidade")
                                .HasColumnType("varchar(30)");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasColumnName("Endereco")
                                .HasColumnType("varchar(100)");

                            b1.HasKey("ClientesId");

                            b1.ToTable("Clientes");

                            b1.HasOne("Projeto.Arquitetura.Core.Domain.Pedidos.Entidades.Clientes")
                                .WithOne("Endereco")
                                .HasForeignKey("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.EnderecoVO", "ClientesId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.OwnsOne("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.CepVO", "CEP", b2 =>
                                {
                                    b2.Property<int>("EnderecoVOClientesId")
                                        .ValueGeneratedOnAdd()
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("CEP");

                                    b2.Property<string>("Codigo")
                                        .HasColumnName("CEP")
                                        .HasColumnType("varchar(8)");

                                    b2.HasKey("EnderecoVOClientesId");

                                    b2.ToTable("Clientes");

                                    b2.HasOne("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.EnderecoVO")
                                        .WithOne("CEP")
                                        .HasForeignKey("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.CepVO", "EnderecoVOClientesId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });

                            b1.OwnsOne("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.UFVO", "UF", b2 =>
                                {
                                    b2.Property<int>("EnderecoVOClientesId")
                                        .ValueGeneratedOnAdd()
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("UF")
                                        .HasColumnName("UF")
                                        .HasColumnType("varchar(2)");

                                    b2.HasKey("EnderecoVOClientesId");

                                    b2.ToTable("Clientes");

                                    b2.HasOne("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.EnderecoVO")
                                        .WithOne("UF")
                                        .HasForeignKey("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.UFVO", "EnderecoVOClientesId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });
                        });
                });

            modelBuilder.Entity("Projeto.Arquitetura.Core.Domain.Pedidos.Entidades.Fornecedores", b =>
                {
                    b.OwnsOne("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.CpfCnpjVO", "CPFCNPJ", b1 =>
                        {
                            b1.Property<int>("FornecedoresId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnName("CpfCnpj")
                                .HasColumnType("varchar(14)");

                            b1.HasKey("FornecedoresId");

                            b1.HasIndex("Numero")
                                .IsUnique();

                            b1.ToTable("Fornecedres");

                            b1.HasOne("Projeto.Arquitetura.Core.Domain.Pedidos.Entidades.Fornecedores")
                                .WithOne("CPFCNPJ")
                                .HasForeignKey("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.CpfCnpjVO", "FornecedoresId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.EmailVO", "Email", b1 =>
                        {
                            b1.Property<int>("FornecedoresId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Endereco")
                                .IsRequired()
                                .HasColumnName("Email")
                                .HasColumnType("varchar(100)");

                            b1.HasKey("FornecedoresId");

                            b1.ToTable("Fornecedres");

                            b1.HasOne("Projeto.Arquitetura.Core.Domain.Pedidos.Entidades.Fornecedores")
                                .WithOne("Email")
                                .HasForeignKey("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.EmailVO", "FornecedoresId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });

                    b.OwnsOne("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.EnderecoVO", "Endereco", b1 =>
                        {
                            b1.Property<int>("FornecedoresId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Bairro")
                                .HasColumnName("Bairro")
                                .HasColumnType("varchar(30)");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnName("Cidade")
                                .HasColumnType("varchar(30)");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasColumnName("Endereco")
                                .HasColumnType("varchar(100)");

                            b1.HasKey("FornecedoresId");

                            b1.ToTable("Fornecedres");

                            b1.HasOne("Projeto.Arquitetura.Core.Domain.Pedidos.Entidades.Fornecedores")
                                .WithOne("Endereco")
                                .HasForeignKey("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.EnderecoVO", "FornecedoresId")
                                .OnDelete(DeleteBehavior.Cascade);

                            b1.OwnsOne("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.CepVO", "CEP", b2 =>
                                {
                                    b2.Property<int>("EnderecoVOFornecedoresId")
                                        .ValueGeneratedOnAdd()
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("CEP");

                                    b2.Property<string>("Codigo")
                                        .HasColumnName("CEP")
                                        .HasColumnType("varchar(8)");

                                    b2.HasKey("EnderecoVOFornecedoresId");

                                    b2.ToTable("Fornecedres");

                                    b2.HasOne("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.EnderecoVO")
                                        .WithOne("CEP")
                                        .HasForeignKey("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.CepVO", "EnderecoVOFornecedoresId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });

                            b1.OwnsOne("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.UFVO", "UF", b2 =>
                                {
                                    b2.Property<int>("EnderecoVOFornecedoresId")
                                        .ValueGeneratedOnAdd()
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("UF")
                                        .HasColumnName("UF")
                                        .HasColumnType("varchar(2)");

                                    b2.HasKey("EnderecoVOFornecedoresId");

                                    b2.ToTable("Fornecedres");

                                    b2.HasOne("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.EnderecoVO")
                                        .WithOne("UF")
                                        .HasForeignKey("Projeto.Arquitetura.Core.Domain.Shared.ValueObjects.UFVO", "EnderecoVOFornecedoresId")
                                        .OnDelete(DeleteBehavior.Cascade);
                                });
                        });
                });

            modelBuilder.Entity("Projeto.Arquitetura.Core.Domain.Pedidos.Entidades.ItensPedidos", b =>
                {
                    b.HasOne("Projeto.Arquitetura.Core.Domain.Pedidos.Entidades.Pedidos", "Pedido")
                        .WithMany("ItensPedidos")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Projeto.Arquitetura.Core.Domain.Pedidos.Entidades.Produtos", "Produto")
                        .WithMany("ItensPedidos")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Projeto.Arquitetura.Core.Domain.Pedidos.Entidades.Pedidos", b =>
                {
                    b.HasOne("Projeto.Arquitetura.Core.Domain.Pedidos.Entidades.Clientes", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Projeto.Arquitetura.Core.Domain.Pedidos.Entidades.Produtos", b =>
                {
                    b.HasOne("Projeto.Arquitetura.Core.Domain.Pedidos.Entidades.Fornecedores", "Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("IdFornecedor")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
